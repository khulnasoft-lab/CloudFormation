{{ if eq .Values.prometheus.enabled true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      {{ toYaml .Values.podDefaults | nindent 6 }}
      {{ include "affinity" .Values.prometheus | indent 6 }}
      {{ include "tolerations" .Values.prometheus | indent 6 }}
      securityContext:
        fsGroup: 65534
      containers:
      - name: prometheus
        image: {{ .Values.prometheus.image }}
        args: ["--config.file=/etc/prometheus/prometheus.yml"]
        resources: {{ toYaml .Values.prometheus.resources | nindent 10 }}
        volumeMounts:
        - name: prometheus-yml
          mountPath: /etc/prometheus/prometheus.yml
          subPath: prometheus.yml
        - name: prometheus-data
          mountPath: /prometheus
      volumes:
      - name: prometheus-yml
        configMap:
          name: prometheus-yml-v1
          defaultMode: 0444
      - name: prometheus-data
        persistentVolumeClaim:
          claimName: prometheus-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-yml-v1
data:
  prometheus.yml: |
    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']
{{ if eq .Values.prometheus.kubeStateMetrics.enabled true }}
    - job_name: 'kube-state-metrics'
      static_configs:
      - targets: ['prometheus-kube-state-metrics:8080']
{{ end }}
{{ if eq .Values.grafana.enabled true }}
    - job_name: 'grafana'
      static_configs:
      - targets: ['grafana']
{{ end }}
{{ if eq .Values.jupyter.enabled true }}
    - job_name: 'jupyterhub'
      scheme: http
      metrics_path: '/metrics'
      static_configs:
      - targets: ['jupyter']
{{ end }}
---
kind: Service
apiVersion: v1
metadata:
  name: prometheus
spec:
  type: ClusterIP
  selector:
    app: prometheus
  ports:
  - port: 80
    targetPort: 9090
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  labels:
    app: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.prometheus.storage }}
{{ if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prometheus
spec:
  podSelector:
    matchLabels:
      app: prometheus
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ingress-nginx
    - namespaceSelector: {}
  - from:
    - podSelector:
        matchLabels:
          app: grafana
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: grafana
    - podSelector:
        matchLabels:
          app: prometheus-kube-state-metrics
{{ end }}
{{ end }}