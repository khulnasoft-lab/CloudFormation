{{ if eq .Values.jupyter.enabled true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyter
  labels:
    app: jupyter
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: jupyter
  template:
    metadata:
      labels:
        app: jupyter
    spec:
      {{ toYaml .Values.podDefaults | nindent 6 }}
      {{ if eq .Values.jupyter.gpu.enabled true }}
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        cloud.google.com/gke-accelerator: {{ .Values.jupyter.gpu.name }}
      {{ end }}
      containers:
      - image: {{ .Values.jupyter.image }}
        name: jupyter
        args:
        - "start.sh"
        - "jupyter"
        - "lab"
        - "--LabApp.token=''"
        - "--LabApp.allow_origin='*'"
        - "--NotebookApp.authenticate_prometheus=False"
        env:
        - name: GRANT_SUDO
          value: "yes"
        securityContext:
          runAsUser: 0
        resources: {{ toYaml .Values.jupyter.resources | nindent 10 }}
        volumeMounts:
        - name: jupyter
          mountPath: /home/jovyan/work
      volumes:
      - name: jupyter
        persistentVolumeClaim:
          claimName: jupyter-pvc
{{ if eq .Values.policies.enabled true }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: jupyter
spec:
  podSelector:
    matchLabels:
      app: jupyter
  policyTypes:
  - Egress
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: ingress-nginx
    - namespaceSelector: {}
  egress:
  - {}
{{ end }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jupyter-pvc
  labels:
    app: jupyter
spec:
{{ if eq .Values.aws.efs false }}
  accessModes:
    - ReadWriteOnce
{{ end }}
{{ if eq .Values.aws.efs true }}
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
{{ end }}
  resources:
    requests:
      storage: {{ .Values.jupyter.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: jupyter
  labels:
    app: jupyter
spec:
  type: ClusterIP
  selector:
    app: jupyter
  ports:
  - name: jupyter
    port: 80
    targetPort: 8888
{{ if eq .Values.jupyter.gpu.enabled true }}
---
# https://raw.githubusercontent.com/GoogleCloudPlatform/container-engine-accelerators/master/nvidia-driver-installer/cos/daemonset-preloaded.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-driver-installer
  namespace: kube-system
  labels:
    k8s-app: nvidia-driver-installer
spec:
  selector:
    matchLabels:
      k8s-app: nvidia-driver-installer
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nvidia-driver-installer
        k8s-app: nvidia-driver-installer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
      tolerations:
      - operator: "Exists"
      hostNetwork: true
      hostPID: true
      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: vulkan-icd-mount
        hostPath:
          path: /home/kubernetes/bin/nvidia/vulkan/icd.d
      - name: nvidia-install-dir-host
        hostPath:
          path: /home/kubernetes/bin/nvidia
      - name: root-mount
        hostPath:
          path: /
      - name: cos-tools
        hostPath:
          path: /var/lib/cos-tools
      initContainers:
      - image: "cos-nvidia-installer:fixed"
        imagePullPolicy: Never
        name: nvidia-driver-installer
        resources:
          requests:
            cpu: "0.15"
            memory: 500Mi
          limits:
            cpu: "1"
            memory: 2Gi
        securityContext:
          privileged: true
        env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia
        - name: vulkan-icd-mount
          mountPath: /etc/vulkan/icd.d
        - name: dev
          mountPath: /dev
        - name: root-mount
          mountPath: /root
        - name: cos-tools
          mountPath: /build/cos-tools
      containers:
      - image: "gcr.io/google-containers/pause:2.0"
        name: pause
        resources:
          requests:
            cpu: "0.10"
            memory: 50Mi
          limits:
            cpu: "0.10"
            memory: 50Mi
{{ end }}
{{ end }}